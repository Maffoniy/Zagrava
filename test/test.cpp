// test.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <random>
#include <math.h>
using namespace std;
void swap(int* xp, int* yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}
void Buble(vector<int>& arr, int l) {
    int i, j;
    for (i = 0; i < l - 1; i++)

        // Last i elements are already in place
        for (j = 0; j < l - i - 1; j++)
            if (arr[j] > arr[j + 1])
                swap(&arr[j], &arr[j + 1]);
}
void Coice(vector<int>& arr, int l) {
    int  k, x;
    for (int i = 0; i < l - 1; i++) /* зовнішній цикл */
    {
        k = i; /* ініціалізовуємо kter в позицію iter */
        x = arr[i]; /* і зберігаємо значення елементу
                           ** оскільки ми повинні ініціалізувати ці значення */

        for (int j = i + 1; j < l; j++) /* внурішній цикл */
        {
            if (arr[j] < x) /* перевіряємо, чи значення елементу менше */
            {/* якщо так, */
                k = j; /* зберігаємо індекс найменшого елементу */
                x = arr[k]; /* зберігаємо його значення */
            }
        }

        /* обмінюємо значення найменшоо елементу масиву з поточним */
        /* поточний елемент (з позиції зовнішнього циклу)
        ** в позицію найменшого */
        arr[k] = arr[i];
        /* найменший елемент в позицію поточного */
        arr[i] = x;
    }
}
void Pushin(vector<int>& arr, int l) {
    for (int i = 1; i < l; i++)
        for (int j = i; j > 0 && arr[j - 1] > arr[j]; j--) // пока j>0 и элемент j-1 > j, x-массив int
            swap(arr[j - 1], arr[j]);        // меняем местами элементы j и j-1
}

int main()
{
    
    random_device rd;
    mt19937 mersenne(rd());
    int times[4][3];
    vector<int> arr(10000000);
    vector<int> clone_arr(10000000);
    for (int i = 0; i < 10000000; i++) {
        arr[i] = mersenne() % 100 + 1;
    }
    int l = 10; 
    while (l <= 10000000) {
        for (int j = 0; j < l; j++) {
            clone_arr[j] = arr[j];
        }
        cout << "procesing Buble " << l  << endl;
        Buble(clone_arr, l);
        for (int j = 0; j < l; j++) {
            clone_arr[j] = arr[j];
        }
        cout << "procesing Coice " << l << endl;
        Coice(clone_arr, l);
        for (int j = 0; j < l; j++) {
            clone_arr[j] = arr[j];
        }
        cout << "procesing Pushin " << l << endl;
        Pushin(clone_arr, l);
        l *= 10;
    }
    
}



// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
